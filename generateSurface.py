#! /usr/bin/env python3

# -*- coding: utf-8 -*-
# Auto Generate G-Code for surfacing table (grbl 1.1 control)
# Programmer: Troy Franks
# Email: outlaws42@gmail.com
version = '2020-05-07'

# Requires tmod library. This is a collection of my functions, it will be included with this script
# All other imports are standard with python 3.

# User script imports
import tmod

# python built in imports
import sys
import os
from datetime import datetime

# Variable set information
# Cut information
table_x = 28.0 # X dimension of the cut area of the table in inches
table_y = 30.5 # Y dimension of the cut area of the table in inches
tool_dia = 1.0 # Diameter of the tool in inches
feedrate = 40. # Feedrate of the toolpath in inches/min
cutpercent = 75 # Percent of stepover
status = 'Proven' # Proven or Unproven
outputFile = f"surface{status}.gcode"

# Header information description
x_zero = 'X HOME POS., LEFT SIDE OF TABLE'
y_zero = 'Y HOME POS., FRONT SIDE OF TABLE '
z_zero = 'TOP OF THE TABLE'
material = '1.5" MDF'
tool = f'{tool_dia}" STRAIGHT ROUTER BIT'

# Don't Change this calculted by the post
stepover = ((cutpercent/100)*tool_dia)

def startCodes(x_zero,y_zero,z_zero,material,tool,status):
  dateset = datetime.now().strftime("%Y/%m/%d, %H:%M")
  filename = os.path.basename(sys.argv[0])
  output = (
    f"%\n"
    f"(SURFACE TABLE ON CNC ROUTER)\n"
    f"(WRITEN FOR GRBL CONTROL)\n"
    f"(THIS PROGRAM WAS GENERATED BY {filename})\n"
    f"(DATE: {dateset})\n\n" 
    f"( *** {status.upper()} PROGRAM *** )\n\n"
    f"(MAKE SURE TO SET G28 WITH G28.1 RETRACTED TO TOP POSITION )\n\n"
    f"( SETUP INFORMATION )\n"
    f"( ZERO SET INFORMATION )\n"
    f"(X0 = {x_zero})\n"
    f"(Y0 = {y_zero})\n"
    f"(Z0 = {z_zero})\n\n"
    f"(MATERIAL TYPE= {material})\n"
    f"(TOOL= {tool})\n"
    f"\nG20 (SET CODE TO INCH)\nG17 (XY PLANE SELECTION)"
    f"G28 G91 Z0 (SEND TO RETURN POS.)\n"
    f"\nG90 (ABSOLUTE POSITON)\n"
    f"G54 (WORK CORD)\nG94 (INCHES PER MINUTE)\n"
    )
  return output

def parameter(table_y, table_x,tool_dia,feedrate,stepover):
  output = (
    f"\nG0 X0 Y0\n"
    f"G01 Z-.02 F10.0\n\n"
    f"(PARAMETER)\n"
    f"G01 Y{table_y} F{feedrate}\n"
    f"G01 X{table_x}\n"
    f"G01 Y0\n"
    f"G01 X0\n"
    f"G01 X{stepover}\n"
  )
  return output


def surface(table_y,table_x,tool_dia,feedrate,stepover):
  startpos = (0+(stepover*2))
  toolr = tool_dia/2
  x_pos = startpos
  y_pos = table_y-stepover
  round = 1
  codeRounds = []
  while x_pos <= table_x:
    output = f"\n(ROUND {round})\nG01 Y{y_pos} F{feedrate}\nG01 X{x_pos}\nG01 Y0\nG01 X{x_pos+stepover}\nG01 Y{y_pos}\n"
    # table_y -= tool_dia
    round += 1
    x_pos += stepover*2
    codeRounds.append(output)
  codeOutput = ''.join(codeRounds)
  return codeOutput
    

setCodes = startCodes(x_zero,y_zero,z_zero,material,tool,status)
tableParameter = parameter(table_y,table_x,tool_dia,feedrate,stepover)
surfaceRest = surface(table_y,table_x,tool_dia,feedrate,stepover)
endCode = "G28 G91 Z0\nG0 G90 X0 Y0\nM2\nM30\n%"
programCNC = [setCodes,tableParameter,surfaceRest,endCode]
tmod.save_file_list(outputFile,programCNC,'relative')